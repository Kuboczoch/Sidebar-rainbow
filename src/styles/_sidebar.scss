$rectangle-height: map-get(map-get($sidebar, rectangle), height);
$rectangle-width: map-get(map-get($sidebar, rectangle), width);

.slide {
  height: 100%;
  left: 0;
  top: 0;
  width: 0;
  position: absolute;
  transition: all 0.3s ease 0s;
  -webkit-transition: all 0.3s ease 0s;
  z-index: -1;
  overflow-x: hidden;
  > div {
    background: -moz-linear-gradient(left, rgba(0, 0, 0, 0.13) 0%, rgba(0, 0, 0, 0) 27%); /* FF3.6-15 */
    background: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.13) 0%, rgba(0, 0, 0, 0) 27%); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(to right, rgba(0, 0, 0, 0.13) 0%, rgba(0, 0, 0, 0) 27%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#a6000000', endColorstr='#00000000', GradientType=1); /* IE6-9 */
    background-color: red;
    width: map-get($sidebar, width);
    height: 100%;
    &::after {
      content: '';
      top: 0;
      left: map-get($sidebar, width);
      width: 0;
      height: 0;
      border-top: $rectangle-height solid red;
      border-right: $rectangle-width solid transparent;
      position: absolute;
    }
  }
}

.sidebar {
  position: fixed;
  width: map-get($sidebar, width);
  top: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);
  transition: left 0.3s;
  background-color: #ddd;
  @media screen and (max-width: 768px) {
    left: map-get($sidebar, width) * -0.8;
    .sidebar-icons {
      flex-direction: column;
      right: 0;
      width: unset;
    }
    &:hover {
      left: 0;
      .sidebar-item i {
        margin-right: 15px !important;
        position: relative;
        left: 0;
      }
      .sidebar-icons {
        flex-direction: row;
        right: unset;
        width: 100%;
      }
    }
  }
  a {
    text-decoration: none !important;
  }
}

.sidebar-sticky {
  position: relative;
  top: 0;
  height: 100%;
  padding-top: .5rem;
}

.sidebar-list {
  list-style-type: none;
  margin: 0;
  padding: 0;
  li {
    position: relative;
    min-height: $rectangle-height;
    max-height: $rectangle-height;
    display: flex;
    justify-content: left;
    align-items: center;
    font-size: 1.5em;
    & > a.active, &:hover {
      color: white;
      a {
        color: white;
      }
      .slide {
        width: calc(100% + #{$rectangle-width});
      }
    }
    a {
      display: flex;
      align-items: center;
      padding: 9px 0 9px 15px;
      height: 100%;
      width: 100%;
      transition: all 0.2s;
    }
    &.divider {
      min-height: unset !important;
      max-height: unset !important;
      padding: $rectangle-height/4 0;
    }
  }
  a {
    color: black;
    &:hover, &:active, &:focus {
      text-decoration: none;
    }
  }
  i {
    font-size: 1.1em;
    margin-right: 15px;
    display: inline-flex;
    justify-content: center;
    width: 30px;
  }

  @media screen and (max-width: 768px) {
    a {
      width: calc(100% - #{map-get($sidebar, width) * 0.2}) !important;
    }
    i {
      transition: all 0.2s;
      position: absolute;
      left: map-get($sidebar, width)*0.8;
      margin-right: 0 !important;
      width: map-get($sidebar, width) * 0.2 !important;
    }
  }

  //Slide custom colors
  @mixin changeSlideColor($color) {
    .slide > div {
      background-color: $color;
      &::after {
        border-top-color: $color;
      }
    }
  }

  @each $color, $bgcolor in map-get($sidebar, colors) {
    .#{$color} {
      @include changeSlideColor($bgcolor);
    }
  }
}

.sidebar-icons {
  transition: all 1s;
  display: flex;
  list-style: none;
  padding: 0;
  flex-wrap: wrap;
  justify-content: center;
  position: absolute;
  bottom: 0;
  width: 100%;

  li {
    width: 30px;
    height: 30px;
    margin: 0 5px 10px 5px;
  }
  a {
    width: 100%;
    height: 100%;
    display: inline-flex;
    border-radius: 50%;
    text-decoration: none !important;
    &:hover {
      box-shadow: 0 0 8px black;
    }
  }
  i {
    width: 100%;
    height: 100%;
    font-size: 1.2em;
    display: flex;
    justify-content: center;
    align-items: center;

  }
  @media screen and (max-width: 768px) {
    a {
      width: 100% !important;
    }
  }

  @each $icon, $color in map-get($sidebar, icons) {
    .#{$icon} {
      color: map-get($color, color) !important;
      @if (map-get($color, background)) {
        background: map-get($color, background) !important;
      }
      @if (map-get($color, background-color)) {
        background-color: map-get($color, background-color) !important;
      }
      @if (map-get($color, background-image)) {
        background-image: map-get($color, background-image);
        background-position: center;
        background-repeat: no-repeat;
        background-size: 30px;
      }
    }
  }
}

@supports ((position: -webkit-sticky) or (position: sticky)) {
  .sidebar-sticky {
    position: -webkit-sticky;
    position: sticky;
  }
}
